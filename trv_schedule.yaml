---
blueprint:
  name: Use schedule for TRV
  description: Turn a TRV on and off based on a schedule
  domain: automation
  input:
    schedule:
      name: Schedule
      description: the schedule to use to control this radiator
      selector:
        entity:
          filter:
            - domain: schedule
    trv:
      name: TRV
      description: the TRV on this radiator
      selector:
        device:
          filter:
            - model: TRVZB
              manufacturer: SONOFF
          entity:
            - domain: climate
    temperature:
      name: Schedule Temperature
      description: temperature to set when on
      default: 19
      selector:
        number:
          mode: box
          min: 10
          max: 22
    boost_temperature:
      name: Boost Temperature
      description: temperature to set when boosting
      default: 22
      selector:
        number:
          mode: box
          min: 18
          max: 25
    boost_schedule:
      name: Boost Permitted Schedule
      description: Should we boost?
      selector:
        entity:
          filter:
            - domain: schedule
    off_on_fireplace:
      name: Turn off when fire running
      description: should this radiator be running with the stove?
      default: true
      selector:
        boolean:

variables:
  off_on_fireplace: !input off_on_fireplace


triggers:
  - entity_id:
      - !input schedule
    to: "on"
    id: turn_on
    trigger: state
  - entity_id:
      - binary_sensor.log_burner_running
    to: "on"
    id: log_burner_on
    trigger: state
  - entity_id:
      - !input schedule
    to: "off"
    id: turn_off
    trigger: state
  - trigger: state
    entity_id:
      - binary_sensor.boiler_boost
    to: "on"
    id: boost_on
  - trigger: state
    entity_id:
      - binary_sensor.boiler_boost
    to: "off"
    id: boost_off
  - trigger: state
    entity_id:
      - binary_sensor.alarm_disarmed
    to: "on"
    id: alarm_home
  - trigger: state
    entity_id:
      - binary_sensor.alarm_disarmed
    to: "off"
    id: alarm_away
  - trigger: time
    at: "23:30:00"
    id: force_off
conditions: []
actions:
  - choose:
      # when boost finishes or the alarm comes off,
      # then if schedule is on turn on and set
      - conditions:
          - condition: trigger
            id:
              - boost_off
              - alarm_home
          - condition: state
            entity_id: !input schedule
            state: "on"
        sequence:
          - action: climate.set_temperature
            metadata: {}
            data:
              temperature: !input temperature
              hvac_mode: heat
            target:
              device_id: !input trv
      # when boost finishes and the above clause fails
      # (ie, schedule is off) close valve
      - conditions:
          - condition: trigger
            id:
              - boost_off
              - turn_off
              - alarm_away
              - force_off
        sequence:
          - action: climate.turn_off
            metadata: {}
            data: {}
            target:
              device_id: !input trv
      # when logburner comes on and we care, turn off
      - conditions:
          - condition: trigger
            id:
              - log_burner_on
          - condition: template
            value_template: "{{ off_on_fireplace }}"
        sequence:
          - action: climate.turn_off
            metadata: {}
            data: {}
            target:
              device_id: !input trv
      # simple case: schedule on and boost already on, do nothing
      - conditions:
          - condition: trigger
            id:
              - turn_on
          - condition: state
            entity_id: binary_sensor.boiler_boost
            state: "on"
        sequence:
      # boost has fired, open valve and set temperature
      - conditions:
          - condition: trigger
            id:
              - boost_on
          - condition: state
            entity_id: !input boost_schedule
            state: "on"
        sequence:
          - action: climate.set_temperature
            metadata: {}
            data:
              temperature: !input boost_temperature
              hvac_mode: heat
            target:
              device_id: !input trv
      # main case: schedule has fired, boost is off,
      # stove is off, set temp and turn on
      - conditions:
          - condition: trigger
            id:
              - turn_on
          - condition: state
            entity_id: binary_sensor.boiler_boost
            state: "off"
          - condition: template
            value_template: |-
                  {{ not (is_state('binary_sensor.log_burner_running', 'on')
                      and off_on_fireplace) }}
        sequence:
          - action: climate.set_temperature
            metadata: {}
            data:
              temperature: !input temperature
              hvac_mode: heat
            target:
              device_id: !input trv
mode: single
